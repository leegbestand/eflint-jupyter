Fact consumer
Fact provider

Fact attribute 

Fact dataset Identified by Int

Fact price of dataset
  Identified by [dataset * price]

Fact dataset contains
  Identified by [dataset * attribute]

Fact price
  Identified by Int

Fact access
  Identified by [dataset * consumer]

// buy data(consumer =..., provider = ..., dataset = ..., price = ...)

// consumer has the power buy data "dataset" for price "price", if the price of "dataset" is indeed "price" 

// Act buy data
//   Actor consumer
//   Recipient provider
//   Related to 
//     dataset, price
//   Conditioned by
//     consumer &&
//     provider &&
//     dataset  &&
//     price of dataset()
//   Creates
//     duty to pay()

// consumer has the power to buy data "dataset", and the effect is the duty to pay some "price" which is the price of the data

// example of where we wish to use an "exist" that binds a variable simultaneously in the pre-condition and the post-condition. This is because there is exactly one true instance of a price, so it should therefore not be a parameter, however multiple instances may exists.

Act buy data
  Actor consumer
  Recipient provider
  Related to 
    dataset
  Conditioned by
    consumer &&
    provider &&
    dataset  && 
    price of dataset() 
  Creates 
    duty to pay(order = order(price = price of dataset[price])) When 
      price of dataset && price of dataset[dataset] == dataset
  Holds When (Exists price of dataset : price of dataset && price of dataset[dataset] == dataset)


Fact order 
  Identified by [consumer * dataset * price]

Duty duty to pay
  Holder consumer
  Claimant provider
  Related to order 

Act pay
  Actor consumer
  Recipient provider
  Related to 
    order 
  Conditioned by
    provider &&
    duty to pay()
  Creates
    duty to give access(dataset = order[dataset])
  Terminates
    duty to pay()
  Holds when Holds(duty to pay())
// Derived from pay(consumer, provider, order) When Holds(duty to pay())

Duty duty to give access
  Holder provider
  Claimant consumer
  Related to dataset

Act give access
  Actor provider
  Recipient consumer
  Related to
    dataset
  Conditioned by
    duty to give access()
  Creates
    access()
  Terminates
    duty to give access()
  Holds When duty to give access()

// differences between "Physical" and "Act"
// 1. no need for recipient
// 2. Holds when True (physical acts can always be performed, subject to pre-condition)

Physical modify dataset price
  Actor provider
  Related to dataset, price
  Conditioned by
    provider &&
    dataset  
  Creates
    price of dataset(dataset = dataset, price = price) 
  Terminates
    price of dataset(dataset = dataset, price = price') When price' != price
